grammar flashasm;

INTEGER: [0-9]+;
SPACES: ' '+ ->skip;
fragment ANYTHING: (.*?)'\n';
fragment ESCAPED_QUOTE : '\"'|'\\\"';
QUOTED_STRING :   '"' ( ESCAPED_QUOTE | ~('\n'|'\r') )*? '"';
IFNGE:'ifnge' SPACES IDENTIFYER;
PROGRAM: 'program';
BODY: 'body';
CODE: 'code';
EMPTYSTRING:'""';
POP: 'pop';
SCRIPT: 'script';
MAXSTACK: 'maxstack ' INTEGER;
REFID: 'refid';
RETURNVIOD: 'returnvoid';
LOCALCOUNT: 'localcount ' INTEGER;
INITSCOPEDEPTH: 'initscopedepth ' INTEGER;
MAXSCOPEDEPTH: 'maxscopedepth ' INTEGER;
GETLOCAL: 'getlocal' SPACES INTEGER;
GETLOCAL0: 'getlocal0';
GETLOCAL1: 'getlocal1';
GETLOCAL2: 'getlocal2';
GETLOCAL3: 'getlocal3';
GETLOCAL4: 'getlocal4';
SETLOCAL:  'setlocal' SPACES [0-9]*;
SETLOCAL0: 'setlocal0';
SETLOCAL1: 'setlocal1';
SETLOCAL2: 'setlocal2';
SETLOCAL3: 'setlocal3';
SETLOCAL4: 'setlocal4';
CLASS: 'class';
PUSHSCOPE: 'pushscope';
POPSCOPE: 'popscope';
END : 'end';
IINIT: 'iinit';
CINIT: 'cinit';
PUSHFALSE:'pushfalse';
PUSHTRUE:'pushtrue';
GETPROPERTY:'getproperty';
CALLPROPERTY:'callproperty';
IMPLEMENTS:'implements';
RETURNVALUE:'returnvalue';
MINORVERSION: 'minorversion ' INTEGER;
MAJORVERSION: 'majorversion ' INTEGER;
SINIT: 'sinit';
PARAM: 'param';
GETSCOPEOBJECT: 'getscopeobject' SPACES INTEGER;
GETLEX: 'getlex';
TRAIT:'trait';
NULL:'null';
INCLUDE: '#include ';
INSTANCE:'instance';
FLAG: 'flag ' ANYTHING;
PROTECTEDNS: 'protectedns';
FINDPROPSTRICT:'findpropstrict' SPACES ANYTHING;
CONSTRUCTSUPER: 'constructsuper' SPACES [0-9]+;
CONSTRUCTPROP: 'constructprop' SPACES ANYTHING;
PUSHSTRING: 'pushstring';
COERCE_S:'coerce_s';
COERCE_A:'coerce_a';
HASNEXT2:'hasnext2' SPACES INTEGER ',' SPACES INTEGER;
COERCE:'coerce';
SUBTRACT:'subtract';
DUPLICATE:'dup';
INCREMENT:'increment';
MULTINAMEL:'MultinameL';
MULTINAME:'Multiname';
STATICPROTECTEDNS:'StaticProtectedNs';
SETPROPERTY:'setproperty';
FINDPROPERTY:'findproperty';
NEGATE:'negate';
IFLE:'ifle' SPACES IDENTIFYER;
IFSTRICTEQ:'ifstricteq' SPACES IDENTIFYER;
MODULO:'modulo';
SETSUPER:'setsuper';
TESTTOKEN:'JUST A TEST';
RTQNAME:'RTQName';
NEWFUNCTION:'newfunction';
ITEM:'item';
GETGLOBALSCOPE:'getglobalscope';
TRY: 'try';
FROM: 'from';
INCREMENT_I:'increment_i';
CALL:'call' SPACES INTEGER;
IN:'in';
METADATA:'metadata';
LOOKUPSWITCH:'lookupswitch' SPACES ANYTHING;
ASTYPELATE:'astypelate';
PROTECTEDNAMESPACE:'ProtectedNamespace';
CALLSUPERVOID:'callsupervoid'SPACES ANYTHING;
NEWACTIVATION:'newactivation';
NEWCATCH:'newcatch' SPACES INTEGER;
DECREMENT_I:'decrement_i';
PACKAGEINTERNALNS:'PackageInternalNs';
CALLSUPER:'callsuper';
CALLPROPVOID: 'callpropvoid' SPACES ANYTHING;
PACKAGENAMESPACE:'PackageNamespace';
NAMESPACE:'Namespace';
PRIVATENAMESPACE:'PrivateNamespace';
QNAME:'QName';
METHOD:'method';
LABEL:'label';
RETURNS:'returns' ANYTHING;
OPTIONAL:'optional' ANYTHING;
//include: INCLUDE QUOTED_STRING {insertTokens($QUOTED_STRING.text);};
VERSION: '#version ' INTEGER;
SLOTID:'slotid 'INTEGER;
JLABEL:IDENTIFYER':';
JUMP:'jump' SPACES IDENTIFYER;
CONVERT_D:'convert_d';
KILL: 'kill' SPACES INTEGER;
PUSHBYTE:'pushbyte' SPACES (INTEGER | '-'INTEGER);
PUSHNULL:'pushnull';
IFFALSE:'iffalse' SPACES IDENTIFYER;
CONSTRUCT:'construct' SPACES INTEGER;
CONST:'const';
TYPE: 'type';
VALUE:'value';
UTF8:'Utf8';
EQUALS:'equals';
NOT:'not';
IFTRUE:'iftrue' SPACES IDENTIFYER;
THROW:'throw';
CONVERT_B:'convert_b';
IFNE:'ifne' SPACES IDENTIFYER;
NEWARRAY:'newarray' SPACES INTEGER;
CONVERT_I:'convert_i';
INCLOCAL_I:'inclocal_i' SPACES INTEGER;
IFLT:'iflt' SPACES IDENTIFYER;
IFGT:'ifgt' SPACES IDENTIFYER;
IFNGT:'ifngt' SPACES IDENTIFYER;
ADD:'add';
NEXTNAME:'nextname';
MULTIPLY:'multiply';
DIVIDE:'divide';
LESSTHAN:'lessthan';
NEWOBJECT:'newobject' SPACES INTEGER;
SETSLOT:'setslot' SPACES INTEGER;
GETSLOT:'getslot' SPACES INTEGER;
LSHIFT:'lshift';
BITAND:'bitand';
RSHIFT:'rshift';
ISTYPELATE:'istypelate';
IFEQ:'ifeq' SPACES IDENTIFYER;
CONVERT_U:'convert_u';
PUSHINT:'pushint' SPACES INTEGER;
PUSHNAN:'pushnan';
PUSHSHORT:'pushshort' SPACES (INTEGER|'-'INTEGER);
GREATERTHAN:'greaterthan';
DECREMENT:'decrement';
GREATEREQUALS:'greaterequals';
IFNLE:'ifnle' SPACES IDENTIFYER;
IFNLT:'ifnlt' SPACES IDENTIFYER;
IFSTRICTNE:'ifstrictne' SPACES IDENTIFYER;
PUSHUNDEFINED:'pushundefined';
PUSHDOUBLE:'pushdouble' SPACES ((INTEGER| (INTEGER'.'INTEGER))|('-'INTEGER| ('-'INTEGER'.'INTEGER)));
LESSEQUALS:'lessequals';
SWAP:'swap';
EXTENDS:'extends';
NEWCLASS:'newclass';
SETTER:'setter';
GETTER:'getter';
GETSUPER:'getsuper';

//start here
flashasm: program EOF;
program: VERSION PROGRAM MINORVERSION MAJORVERSION (script | flashasmclass)* END;
script: SCRIPT (sinit)* (trait)*  END;
body: BODY MAXSTACK LOCALCOUNT INITSCOPEDEPTH MAXSCOPEDEPTH (code)* (tryf)*? (trait)*? END ;
code: CODE internalcode END;
flashasmclass: CLASS refid (instance)* (cinit)* (trait)* (traitcl)*? END;
flashasmmethod: METHOD refid (param)* (RETURNS)*? (FLAG)*? (OPTIONAL)*? (body)*? END;
iinit: IINIT refid (param)* (FLAG)*? (OPTIONAL)*? (body)*  END;
cinit: CINIT refid (body)* END;
sinit: SINIT refid (body)* END;
instance: INSTANCE qnamefun (extendsf)*? (implementsf)* (FLAG)* (protectednsprop)* (iinit)* (trait)*? (flashasmmethod)* END;
internalcode: (
GETLOCAL
|GETLOCAL0
|GETLOCAL1
|GETLOCAL2
|GETLOCAL3
|GETLOCAL4
|SETLOCAL
|SETLOCAL0
|SETLOCAL1
|SETLOCAL2
|SETLOCAL3
|SETLOCAL4
|POP
|POPSCOPE
|PUSHSCOPE
|GETSCOPEOBJECT
|getlex
|newclass
|initproperty
|RETURNVIOD
|TRAIT
|FINDPROPSTRICT
|PUSHFALSE
|RETURNVALUE
|getproperty
|findproperty
|callproperty
|JLABEL
|CONSTRUCTSUPER
|CONSTRUCTPROP
|coerce
|pushstring
|setproperty
|CALLPROPVOID
|SUBTRACT
|DUPLICATE
|INCREMENT
|JUMP
|CONVERT_D
|KILL
|PUSHBYTE
|LABEL
|IFFALSE
|PUSHTRUE
|PUSHNULL
|EQUALS
|NOT
|IFTRUE
|THROW
|CONVERT_B
|IFNE
|NEWARRAY
|INCLOCAL_I
|IFLT
|CONSTRUCT
|CONVERT_I
|ADD
|NEWOBJECT
|GREATEREQUALS
|GREATERTHAN
|ISTYPELATE
|IFNGT
|IFNLE
|COERCE_S
|COERCE_A
|HASNEXT2
|NEXTNAME
|GETSLOT
|SWAP
|getsuper
|PUSHDOUBLE
|SETSLOT
|CALLSUPERVOID
|NEWACTIVATION
|NEWCATCH
|DECREMENT_I
|callsuper
|IFNGE
|LOOKUPSWITCH
|IFEQ
|PUSHNAN
|DIVIDE
|PUSHSHORT
|PUSHUNDEFINED
|ASTYPELATE
|LESSEQUALS
|LESSTHAN
|DECREMENT
|INCREMENT_I
|IFNLT
|CALL
|IFSTRICTNE
|MULTIPLY
|IN
|PUSHINT
|CONVERT_U
|LSHIFT
|BITAND
|RSHIFT
|GETGLOBALSCOPE
|newfunction
|setsuper
|NEGATE
|IFLE
|IFSTRICTEQ
|IFGT
|MODULO
)+;
tryf: TRY FROM 'L'INTEGER 'to' 'L'INTEGER 'target' 'L'INTEGER TYPE qnamefun 'name' qnamefun END;
trait: traitcl | traitm | traitsl | traitg | traitcon |traitset;
traitcl: TRAIT CLASS qnamefun (SLOTID)* (flashasmclass)*? (script)*? END;
traitcon: TRAIT CONST qnamefun  (SLOTID)? TYPE qnamefun VALUE (traitconvalues)* END;
traitconvalues: ( (UTF8'('QUOTED_STRING')') | 'Null()' | 'False()' | 'True()'| 'Integer('INTEGER')' |'Double('INTEGER'.'INTEGER')');
traitm: TRAIT METHOD qnamefun (FLAG)*? (flashasmmethod)* (metadata)* END;
traitsl: TRAIT 'slot' qnamefun (SLOTID)? ((TYPE qnamefun) (VALUE (traitconvalues)*)*)*? END;
traitg: TRAIT 'getter' qnamefun (FLAG)*? (flashasmmethod) (metadata)* END;
traitset: TRAIT 'setter' qnamefun (FLAG)*? (flashasmmethod)* END;
refid: REFID QUOTED_STRING;

getproperty: GETPROPERTY (qnamefun | multinamelfun| multinamefun|rtqname);

findproperty: FINDPROPERTY qnamefun;

callproperty: CALLPROPERTY (qnamefun|multinamefun);

implementsf:IMPLEMENTS multinamefun;

param: PARAM qnamefun;

array: '[' array_contents ']';
namespace: NAMESPACE '(' QUOTED_STRING ')';
package_namespace: PACKAGENAMESPACE '(' QUOTED_STRING ')';
private_namespace: PRIVATENAMESPACE ('(' (QUOTED_STRING|NULL|EMPTYSTRING) ')');

array_contents: namespace         ((', ' array_contents) | (')'))
              | package_namespace ((', ' array_contents) | (')'))
              | private_namespace ((', ' array_contents) | (')'))
              //(QUOTED_STRING)
              ;

//multinamefun: MULTINAME ('(' .?', '| '['.?'('.?')])'|')'|', ')*;
//multinamefun: MULTINAME '(' QUOTED_STRING ', ' array ')';
multinamefun:
 MULTINAME'('QUOTED_STRING', ['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAME'('QUOTED_STRING', ['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAME'('QUOTED_STRING', ['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAME'('QUOTED_STRING', ['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGEINTERNALNS'(""), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAME'('QUOTED_STRING', ['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), '(PACKAGENAMESPACE('(""), '|'('QUOTED_STRING'), '))*PACKAGEINTERNALNS('(""), '|'('QUOTED_STRING'), ')?PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), '(NAMESPACE'('QUOTED_STRING'), ')?(PACKAGENAMESPACE'('QUOTED_STRING'), ')*?(PROTECTEDNAMESPACE'('QUOTED_STRING'), ')?(STATICPROTECTEDNS('('QUOTED_STRING'), '|'('QUOTED_STRING')])'))*?(', 'INTEGER||PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])')
|MULTINAME'('QUOTED_STRING', ['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAME'('QUOTED_STRING', ['PACKAGENAMESPACE'('QUOTED_STRING')])';
multinamelfun:MULTINAMEL '(''['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'('(QUOTED_STRING|EMPTYSTRING)'), 'PACKAGENAMESPACE'(""), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), ' PROTECTEDNAMESPACE'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAMEL '(''['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), ' PROTECTEDNAMESPACE'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAMEL '(''['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'('(QUOTED_STRING|EMPTYSTRING)'), 'PACKAGENAMESPACE'(""), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING'), ' STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAMEL'(''['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGEINTERNALNS'(""), ' PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAMEL'(''['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), '(PACKAGENAMESPACE('(""), '|'('QUOTED_STRING'), '))*(PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), ')*PACKAGEINTERNALNS('(""), '|'('QUOTED_STRING'), ')(PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), ')?NAMESPACE'('QUOTED_STRING'), '(PROTECTEDNAMESPACE'('QUOTED_STRING'), ')?(PACKAGENAMESPACE('(""), '|'('QUOTED_STRING'), '))*?(PROTECTEDNAMESPACE'('QUOTED_STRING'), ')?(STATICPROTECTEDNS'('QUOTED_STRING'), ')*STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAMEL'(''['PACKAGENAMESPACE'(""), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAMEL'(''['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])'
|MULTINAMEL'(''['PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'NAMESPACE'('QUOTED_STRING'), 'PACKAGENAMESPACE'(""), 'PRIVATENAMESPACE'('NULL', 'QUOTED_STRING'), 'PACKAGENAMESPACE'('QUOTED_STRING'), 'PACKAGEINTERNALNS'('QUOTED_STRING'), 'PROTECTEDNAMESPACE'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING'), 'STATICPROTECTEDNS'('QUOTED_STRING')])';
qnamefun:QNAME '(' (PACKAGENAMESPACE| PRIVATENAMESPACE | NAMESPACE|PACKAGEINTERNALNS|PROTECTEDNAMESPACE ) qnameparams;
qnameparams:
'(' QUOTED_STRING ')'','QUOTED_STRING')'
|'(' NULL ')'','QUOTED_STRING')'
|'(' QUOTED_STRING', 'QUOTED_STRING')'', 'QUOTED_STRING')'
|'('  NULL', 'NULL')'', 'QUOTED_STRING')'
|'('  NULL', 'QUOTED_STRING'), 'QUOTED_STRING')'
|'(""),'QUOTED_STRING')'
|'('QUOTED_STRING'), 'QUOTED_STRING')'
|'(""), 'QUOTED_STRING')'
|'('QUOTED_STRING'), 'QUOTED_STRING'), 'INTEGER
|'(""), 'QUOTED_STRING'), 'INTEGER
|'('  NULL', 'QUOTED_STRING'), 'QUOTED_STRING'), 'INTEGER;
getlex:GETLEX qnamefun;
newclass: NEWCLASS QUOTED_STRING;
initproperty: 'initproperty' qnamefun;

extendsf: EXTENDS qnamefun;

protectednsprop:PROTECTEDNS protectednamespace;

pushstring:PUSHSTRING QUOTED_STRING;

coerce: COERCE qnamefun;

setproperty:SETPROPERTY (qnamefun | multinamelfun| multinamefun|rtqname);

getsuper:GETSUPER qnamefun;

callsuper:CALLSUPER qnamefun;

protectednamespace:PROTECTEDNAMESPACE'('QUOTED_STRING')';

metadata:METADATA QUOTED_STRING (item)* END;

item:ITEM (NULL| QUOTED_STRING) QUOTED_STRING;

newfunction:NEWFUNCTION QUOTED_STRING;
rtqname:RTQNAME'(' QUOTED_STRING')';

setsuper:SETSUPER qnamefun;

LINE_COMMENT
   : ';' ~ ('\n' | '\r')* '\r'? '\n' -> skip
   ;
FileName: '"' ~'"'* '"';
fragment IDENTIFYER:[A-Za-z][A-Za-z0-9]+;
WS
   : (' ' | '\t' | '\n' | '\r')+ -> skip
   ;